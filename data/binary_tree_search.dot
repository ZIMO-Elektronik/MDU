digraph {
  rankdir=LR;

  start[shape=square, label="Binary-Tree-Search"];
  start->_255;
  _255[shape=diamond, label="byte == 255?"];
  _255->byte[label="true"];
  _255->_255[label="false", tailport=s, headport=sw];
  byte[shape=diamond, label="byte"];

  bit1[shape=diamond, label="bit[byte] == 1?"];
  byte->bit1[label="[0...62]"];
  bit0[shape=diamond, label="bit[byte] == 0?"];
  byte->bit0[label="[64...64+62]"];

  ignore_if_1[shape=diamond, label="bit[byte-128] == 1?"];
  byte->ignore_if_1[label="[128...128+62]"];
  ignore_if_0[shape=diamond, label="bit[byte-192] == 0?"];
  byte->ignore_if_0[label="[192...192+62]"];  

  ack[label="Send ack bit"];
  bit1->ack[label="true"];
  bit1->byte[label="false"];
  bit0->ack[label="true"];
  bit0->byte[label="false"];
  ack->byte;

  ignore_if_1->_255[label="true"];
  ignore_if_1->byte[label="false"];
  ignore_if_0->_255[label="true"];
  ignore_if_0->byte[label="false"];  
}